name: Comprehensive test

# Adapted from usethis::use_github_action_check_standard()

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/comprehensive.yml'
      - '.Rbuildignore'
      - 'data/**'
      - 'DESCRIPTION'
      - 'inst/tinytest/**'
      - 'man/**'
      - 'NAMESPACE'
      - 'R/**'
      - 'tests/**'
      - 'vignettes/**'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/comprehensive.yml'
      - '.Rbuildignore'
      - 'data/**'
      - 'DESCRIPTION'
      - 'inst/tinytest/**'
      - 'man/**'
      - 'NAMESPACE'
      - 'R/**'
      - 'tests/**'
      - 'vignettes/**'
  workflow_dispatch:

jobs:
  check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-18.04, r: '3.4.4', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_COMPILE_AND_INSTALL_PACKAGES: never
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      TT_AT_HOME: TRUE

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-tinytex@v1

      - name: Install extra LaTeX dependencies to build vignettes
        run: |
          tlmgr update --self
          tlmgr install ae parskip

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "18.04"))')

      - name: Install Ghostscript on Linux
        if: runner.os == 'Linux'
        run: sudo DEBIAN_FRONTEND=noninteractive apt-get install --yes ghostscript

      - name: Install Ghostscript on macOS
        if: runner.os == 'macOS'
        run: brew install ghostscript

      - name: Install Ghostscript on Windows
        if: runner.os == 'Windows'
        run: choco install ghostscript --no-progress

      - name: Start interactive debugging session
        if: runner.os == 'Windows'
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session information
        run: sessionInfo()
        shell: Rscript {0}

      # The fact that the README can't access the GIF only throws an error for
      # R 3.4.4. Setting _R_CHECK_TOPLEVEL_FILES_ to false had no effect on
      # R CMD check.
      - name: Delete README
        if: ${{ matrix.config.r == '3.4.4' }}
        run: rm README.md

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

  deploy-main:
    needs: check
    if: ${{ github.repository == 'abbvie-external/OmicNavigator' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy main dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: abbvie-internal/OmicNavigatorCD
          event-type: deploy-main
          client-payload: '{
            "repository": "${{ github.repository }}",
            "ref": "${{ github.ref }}",
            "sha": "${{ github.sha }}",
            "workflow": "${{ github.workflow }}",
            "run_id": "${{ github.run_id }}",
            "run_number": "${{ github.run_number }}"
          }'
